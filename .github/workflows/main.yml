name: Deploy Vue Frontend

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: # 允许手动触发

# 为 GITHUB_TOKEN 设置默认权限，以便部署到 GitHub Pages
permissions:
  contents: read      # checkout 代码需要
  pages: write        # 部署到 GitHub Pages 需要
  id-token: write     # OIDC 认证需要 (actions/deploy-pages 使用)

# 只允许一个并发部署，跳过在队列中等待的运行。
# 但是，不要取消进行中的运行，因为我们希望允许那些部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 或者你的项目使用的版本
          cache: 'npm'
          cache-dependency-path: client/package-lock.json # 更精确的缓存路径

      - name: Install Dependencies
        working-directory: ./client
        run: npm ci # 使用 ci 更稳定

      - name: Build
        working-directory: ./client
        run: npm run build # 确保你的 vite.config.js 中 base: '/仓库名/' 已设置

      - name: Setup Pages
        uses: actions/configure-pages@v4 # 官方action

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # 官方action
        with:
          # 从 client/dist 目录上传
          path: './client/dist'

  deploy:
    needs: build # 依赖 build job
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # 输出部署后的 URL
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 官方action
